// ‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏ï‡πä‡∏∞
let order = {};
const tableData = {};
let currentTable = 1;

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πä‡∏∞
const dropdown = document.getElementById("tableDropdown");
const tableLabel = document.getElementById("currentTableLabel");
for (let i = 1; i <= 37; i++) {
  const btn = document.createElement("button");
  btn.textContent = `‡πÇ‡∏ï‡πä‡∏∞ ${i}`;
  btn.onclick = () => switchTable(i);
  dropdown.appendChild(btn);
}

function toggleTableDropdown() {
  dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
}

function switchTable(tableNumber) {
  saveCurrentOrder();
  currentTable = tableNumber;
  loadCurrentOrder();
  tableLabel.textContent = currentTable;
  dropdown.style.display = "none";
  saveDataToStorage();  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á localStorage
}

function saveCurrentOrder() {
  tableData[currentTable] = JSON.parse(JSON.stringify(order));
}

function loadCurrentOrder() {
  order = tableData[currentTable] || {};
  updateSummary();
  renderMenu("food", currentFoodPage);   // üëà ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  renderMenu("drink", currentDrinkPage);
}

function showPage(page, event) {
    saveCurrentOrder(); // üëà ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç!
  document.querySelectorAll(".menu-page").forEach((el) => el.classList.remove("active"));
  document.querySelectorAll(".tab-btn").forEach((btn) => btn.classList.remove("active"));
  document.getElementById(page).classList.add("active");
  event.target.classList.add("active");
  loadCurrentOrder(); // ‡πÇ‡∏´‡∏•‡∏î order ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
}

function addItem(name) {
  const input = document.getElementById(`price-${name}`);
  const price = input ? parseFloat(input.value) : 0;
  if (!order[name]) {
    order[name] = { qty: 1, price };
  } else {
    order[name].qty += 1;
    order[name].price = price;
  }
  updateSummary();
  saveDataToStorage();  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á localStorage
}

function removeItem(name) {
  if (order[name]) {
    order[name].qty -= 1;
    if (order[name].qty <= 0) delete order[name];
    updateSummary();
    saveDataToStorage();  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á localStorage
  }
}

function updateSummary() {
  const list = document.getElementById("order-list");
  const total = document.getElementById("total");
  list.innerHTML = "";
  let sum = 0;

  for (let item in order) {
    const itemData = order[item];
    const itemTotal = itemData.qty * itemData.price;
    sum += itemTotal;

    const li = document.createElement("li");
    li.innerHTML = `
      <div style="display: flex; justify-content: space-between; align-items: center;">
        <span>${item}</span>
        <div style="display: flex; align-items: center; gap: 5px;">
          <button class="order-summary-button remove" onclick="removeItem('${item}')">-</button>
          <span class="order-summary-qty">${itemData.qty}</span>
          <button class="order-summary-button" onclick="addItem('${item}')">+</button>
          <span>= ‡∏ø${itemTotal}</span>
        </div>
      </div>
    `;
    list.appendChild(li);
  }

  total.textContent = `‡∏ø${sum}`;
}

const menuData = {
    food: [
      [
        { name: "‡∏•‡∏≤‡∏ö‡πÄ‡∏õ‡πá‡∏î", price: 70, image: "tom.jpg" },
        { name: "‡∏•‡∏≤‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏∏‡∏Å", price: 90, image: "tom.jpg" },
        { name: "‡∏Å‡πâ‡∏≠‡∏¢‡∏î‡∏¥‡∏ö", price: 90, image: "tom.jpg" },
        { name: "‡∏ô‡πâ‡∏≥‡∏ï‡∏Å‡∏Ñ‡∏≠‡∏´‡∏°‡∏π", price: 90, image: "tom.jpg" },
        { name: "‡∏ô‡πâ‡∏≥‡∏ï‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠", price: 100, image: "tom.jpg" },
        { name: "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á", price: 120, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á", price: 100, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡∏£‡∏ß‡∏°‡∏°‡∏¥‡∏ï‡∏£", price: 90, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô", price: 100, image: "tom.jpg" },
      ],
      [
        { name: "‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á-‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å", price: 120, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö", price: 80, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏±‡∏ö", price: 90, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡∏´‡∏°‡∏π‡∏¢‡∏≠/‡∏¢‡∏≥‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏Å", price: 70, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡∏Ñ‡∏≠‡∏´‡∏°‡∏π‡∏¢‡πà‡∏≤‡∏á", price: 90, image: "tom.jpg" },
        { name: "‡∏Å‡∏∏‡πâ‡∏á‡πÅ‡∏ä‡πà‡∏ô‡πâ‡∏≥‡∏õ‡∏•‡∏≤", price: 80, image: "tom.jpg" },
        { name: "‡∏Ñ‡∏≠‡∏´‡∏°‡∏π‡∏¢‡πà‡∏≤‡∏á", price: 80, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏°‡∏∑‡∏≠‡∏ô‡∏≤‡∏á", price: 90, image: "tom.jpg" },
   
      ],
      [
        { name: "‡∏¢‡∏≥‡∏õ‡∏•‡∏≤‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á", price: 50, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡πÑ‡∏Ç‡πà‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö", price: 70, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡πÑ‡∏Ç‡πà‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏±‡∏ö", price: 80, image: "tom.jpg" },
        { name: "‡πÑ‡∏Ç‡πà‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤‡∏Ç‡∏¥‡∏á‡∏î‡∏≠‡∏á", price: 50, image: "tom.jpg" },
        { name: "‡πÑ‡∏Ç‡πâ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤‡∏ó‡∏£‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á", price: 100, image: "tom.jpg" },
      ],
      [
        { name: "‡∏ï‡∏≥‡∏õ‡∏≤‡∏£‡πâ‡∏≤-‡∏ï‡∏≥‡∏õ‡∏π-‡∏õ‡∏•‡∏≤‡∏£‡πâ‡∏≤", price: 50, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡∏ã‡∏±‡πà‡∏ß-‡∏ï‡∏≥‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ô", price: 50, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢", price: 50, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢‡πÑ‡∏Ç‡πà‡πÄ‡∏Ñ‡πá‡∏°", price: 60, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡∏õ‡∏π", price: 50, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡πÇ‡∏Ñ‡∏£‡∏≤‡∏ä", price: 60, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏û‡∏î‡πÑ‡∏Ç‡πà‡πÄ‡∏Ñ‡πá‡∏°", price: 70, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡πÅ‡∏ï‡∏á-‡∏ï‡∏≥‡∏ñ‡∏±‡πà‡∏ß", price: 60, image: "tom.jpg" },
        { name: "‡∏ï‡∏≥‡∏Ñ‡∏≠‡∏´‡∏°‡∏π,‡∏ï‡∏≥‡∏´‡∏°‡∏π‡∏¢‡∏≠,‡∏ï‡∏≥‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î", price: 70, image: "tom.jpg" },
      ],
      [
        { name: "‡∏ã‡∏∏‡∏õ‡∏´‡∏°‡πà‡∏≠‡πÑ‡∏°‡πâ", price: 50, image: "tom.jpg" },
        { name: "‡∏´‡∏°‡∏π‡πÅ‡∏î‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß", price: 90, image: "tom.jpg" },
        { name: "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÅ‡∏î‡∏î", price: 100, image: "tom.jpg" },
        { name: "‡∏õ‡∏µ‡∏Å‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î", price: 60, image: "tom.jpg" },
        { name: "‡πÅ‡∏´‡∏ô‡∏°‡∏™‡∏±‡∏ô‡∏Ñ‡∏≠‡∏´‡∏°‡∏π‡∏ó‡∏≠‡∏î", price: 90, image: "tom.jpg" },
        { name: "‡πÑ‡∏Ç‡πà‡πÄ‡∏à‡∏µ‡∏¢‡∏ß", price: 50, image: "tom.jpg" },
        { name: "‡πÑ‡∏Ç‡πà‡πÄ‡∏à‡∏µ‡∏¢‡∏ß‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö", price: 60, image: "tom.jpg" },
        { name: "‡∏õ‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏î‡∏ó‡∏≠‡∏î", price: 70, image: "tom.jpg" },
      ],
      [
        { name: "‡∏ï‡πâ‡∏°‡πÅ‡∏ã‡πà‡∏ö‡πÄ‡∏•‡πâ‡∏á", price: 80, image: "tom.jpg" },
        { name: "‡∏ï‡πâ‡∏°‡∏Å‡∏£‡∏∞‡∏î‡∏π‡∏Å‡∏≠‡πà‡∏≠‡∏ô", price: 90, image: "tom.jpg" },
        { name: "‡∏ï‡πâ‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠", price: 80, image: "tom.jpg" },
        { name: "‡∏ï‡πâ‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô", price: 80, image: "tom.jpg" },
        { name: "‡∏ï‡πâ‡∏°‡πÄ‡∏≠‡πá‡∏ô‡πÅ‡∏Å‡πâ‡∏ß", price: 100, image: "tom.jpg" },
        { name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏•‡∏ß‡∏Å‡∏à‡∏¥‡πâ‡∏°", price: 80, image: "tom.jpg" },
        { name: "‡πÄ‡∏≠‡πá‡∏ô‡πÅ‡∏Å‡πâ‡∏ß‡∏•‡∏ß‡∏Å‡∏à‡∏¥‡πâ‡∏°", price: 100, image: "tom.jpg" },
        { name: "‡∏≠‡πà‡∏≠‡∏°‡πÑ‡∏Å‡πà", price: 80, image: "tom.jpg" },
      ], [
        { name: "‡∏¢‡∏≥‡∏ñ‡∏±‡πà‡∏ß", price: 40, image: "tom.jpg" },
        { name: "‡∏¢‡∏≥‡πÄ‡∏°‡πá‡∏î‡∏°‡πà‡∏ß‡∏á", price: 80, image: "tom.jpg" },
        { name: "‡πÅ‡∏´‡∏ô‡∏°‡∏ó‡∏£‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á", price: 50, image: "tom.jpg" },
        { name: "‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏Å‡∏£‡∏µ‡∏¢‡∏ö", price: 50, image: "tom.jpg" },
        { name: "‡πÄ‡∏ü‡∏£‡∏ô‡∏ü‡∏£‡∏≤‡∏¢", price: 60, image: "tom.jpg" },
        { name: "‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢", price: 10, image: "tom.jpg" },
        { name: "‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß", price: 10, image: "tom.jpg" },
        { name: "‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ô", price: 10, image: "tom.jpg" },
      ],
      [
        { name: "‡∏û‡∏¥‡πÄ‡∏®‡∏©", price: 5, image: "tom.jpg" },
        { name: "‡∏û‡∏¥‡πÄ‡∏®‡∏©", price: 10, image: "tom.jpg" },
        { name: "‡∏û‡∏¥‡πÄ‡∏®‡∏©", price: 15, image: "tom.jpg" },
        { name: "‡∏û‡∏¥‡πÄ‡∏®‡∏©", price: 20, image: "tom.jpg" },
      ],
      // ‡∏´‡∏ô‡πâ‡∏≤ 2, 3... ‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    ],
    drink: [
      [
        { name: "‡πÇ‡∏Ñ‡πâ‡∏Å", price: 25, image: "tom.jpg" },
        { name: "‡πÇ‡∏ã‡∏î‡∏≤", price: 25, image: "tom.jpg" },
        { name: "‡πÅ‡∏Ç‡πá‡∏á‡πÄ‡∏•‡πá‡∏Å", price: 25, image: "tom.jpg" },
        { name: "‡πÅ‡∏Ç‡πá‡∏á‡πÉ‡∏´‡∏ç‡πà", price: 50, image: "tom.jpg" },
        { name: "‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏´‡∏•‡πâ‡∏≤‡πÅ‡∏ö‡∏ô", price: 40, image: "tom.jpg" },
        { name: "‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏´‡∏•‡πâ‡∏≤‡∏Å‡∏•‡∏°", price: 80, image: "tom.jpg" },
        { name: "‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ß‡∏ô‡πå+‡∏ñ‡∏±‡∏á‡πÅ‡∏ä‡πà", price: 100, image: "tom.jpg" },
      ],
      [
        { name: "‡∏•‡∏µ‡πÇ‡∏≠", price: 90, image: "tom.jpg" },
        { name: "‡∏ä‡πâ‡∏≤‡∏á", price: 90, image: "tom.jpg" },
        { name: "‡∏™‡∏¥‡∏á‡∏´‡πå", price: 95, image: "tom.jpg" },
        { name: "‡πÑ‡∏Æ‡∏ô‡∏≤‡πÄ‡∏Å‡πâ‡∏ô", price: 100, image: "tom.jpg" },
        { name: "‡∏£‡∏µ‡πÄ‡∏à‡∏ô‡∏ã‡∏µ‡πà ‡πÅ‡∏ö‡∏ô", price: 480, image: "tom.jpg" },
        { name: "‡πÅ‡∏™‡∏á‡πÇ‡∏™‡∏° ‡πÅ‡∏ö‡∏ô", price: 190, image: "tom.jpg" },
        { name: "‡πÅ‡∏™‡∏á‡πÇ‡∏™‡∏°‡∏Å‡∏•‡∏°", price: 390, image: "tom.jpg" },
        { name: "‡∏´‡∏á‡∏™‡πå ‡πÅ‡∏ö‡∏ô", price: 190, image: "tom.jpg" },
        { name: "‡∏´‡∏á‡∏™‡πå ‡∏Å‡∏•‡∏°", price: 350, image: "tom.jpg" },
      ],
      [
        { name: "‡πÄ‡∏ö‡∏•‡∏ô‡∏î‡πå285 ‡∏î‡∏≥", price: 360, image: "tom.jpg" },
        { name: "‡πÄ‡∏ö‡∏•‡∏ô‡∏î‡πå285 ‡∏ó‡∏≠‡∏á", price: 400, image: "tom.jpg" },
        { name: "‡∏ß‡∏π‡∏ü ‡πÅ‡∏ö‡∏ô", price: 190, image: "tom.jpg" },
        { name: "‡∏ß‡∏π‡∏ü ‡∏Å‡∏•‡∏°", price: 390, image: "tom.jpg" },
        { name: "‡∏™‡∏õ‡∏≤‡∏¢", price: 50, image: "tom.jpg" },
        { name: "‡πÇ‡∏Æ‡∏Å‡∏≤‡πÄ‡∏î‡πâ‡∏ô", price: 130, image: "tom.jpg" },
      ],
    ],
  };
  

let currentFoodPage = 0;
let currentDrinkPage = 0;

function renderMenu(type, page) {
  const container = document.getElementById(`${type}-menu`);
  const pagination = document.getElementById(`${type}-pagination`);
  const menu = menuData[type][page];
  console.log('Rendering menu:', type, 'page:', page, 'items:', menu.length);

  container.innerHTML = "";
  menu.forEach((item) => {
    const imgSrc = item.image || "images/placeholder.jpg";
    const itemOrder = order[item.name];
    const itemPrice = itemOrder ? itemOrder.price : item.price;

    const div = document.createElement("div");
    div.className = "menu-item";
    div.innerHTML = `
    <img src="${imgSrc}" alt="${item.name}" />
    <span>${item.name}</span>
    <input type="number" id="price-${item.name}" value="${itemPrice}" style="width:50px; font-size:0.9em;" 
           onchange="updateItemPrice('${item.name}', this.value)" />
    <div class="controls">
      <button onclick="addItem('${item.name}')">+</button>
      <button class="remove" onclick="removeItem('${item.name}')">-</button>
    </div>
  `;
  
    container.appendChild(div);
  });

  pagination.innerHTML = "";
  menuData[type].forEach((_, i) => {
    const btn = document.createElement("button");
    btn.textContent = i + 1;
    btn.className = i === page ? "active" : "";
    btn.onclick = () => {
      saveCurrentOrder();  // üëà ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç!
      if (type === "food") currentFoodPage = i;
      else currentDrinkPage = i;
      renderMenu(type, i);
      loadCurrentOrder(); // üëà ‡πÇ‡∏´‡∏•‡∏î order ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    };
    
    pagination.appendChild(btn);
  });
}


renderMenu("food", currentFoodPage);
renderMenu("drink", currentDrinkPage);

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏õ localStorage ‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ
function saveCurrentOrderToStorage() {
  saveCurrentOrder();
  // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÇ‡∏ï‡πä‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô localStorage
  localStorage.setItem("tableOrders", JSON.stringify(tableData));
  localStorage.setItem("currentTable", currentTable);
}

// ‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡πÅ‡∏£‡∏Å‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
function saveDataToStorage() {
  saveCurrentOrder(); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å order ‡∏Ç‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô
  localStorage.setItem("tableOrders", JSON.stringify(tableData));
  localStorage.setItem("currentTable", currentTable);
}

function loadDataFromStorage() {
  const savedTableOrders = localStorage.getItem('tableOrders');
  const savedCurrentTable = localStorage.getItem('currentTable');

  if (savedTableOrders) {
    Object.assign(tableData, JSON.parse(savedTableOrders));
  }
  if (savedCurrentTable) {
    currentTable = parseInt(savedCurrentTable, 10);
  }

  loadCurrentOrder();
  document.getElementById("currentTableLabel").textContent = currentTable;
  populateMoveTableOptions();
}

loadDataFromStorage();
function moveOrderToTable(fromTable, toTable) {
  if (fromTable === toTable) {
    alert("‡πÇ‡∏ï‡πä‡∏∞‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô");
    return;
  }

  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÇ‡∏ï‡πä‡∏∞‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á
  if (tableData[fromTable]) {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÇ‡∏ï‡πä‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô
    if (!tableData[toTable]) {
      tableData[toTable] = {};
    }
    for (let item in tableData[fromTable]) {
      if (tableData[toTable][item]) {
        tableData[toTable][item].qty += tableData[fromTable][item].qty;
      } else {
        tableData[toTable][item] = { ...tableData[fromTable][item] };
      }
    }
    // ‡∏•‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÇ‡∏ï‡πä‡∏∞‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á
    delete tableData[fromTable];

    // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏ï‡πä‡∏∞‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏ï‡πä‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå order ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    if (currentTable === fromTable) {
      order = {};
    }
  }

  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà
  currentTable = toTable;
  loadCurrentOrder();
  document.getElementById("currentTableLabel").textContent = currentTable;

  saveDataToStorage();
}
function populateMoveTableOptions() {
  const select = document.getElementById("moveToTableSelect");
  select.innerHTML = "";
  for (let i = 1; i <= 37; i++) {
    if (i !== currentTable) {
      const option = document.createElement("option");
      option.value = i;
      option.textContent = `‡πÇ‡∏ï‡πä‡∏∞ ${i}`;
      select.appendChild(option);
    }
  }
}

function onMoveTable() {
  const select = document.getElementById("moveToTableSelect");
  const toTable = parseInt(select.value, 10);
  moveOrderToTable(currentTable, toTable);
  populateMoveTableOptions();  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢
}
function updateItemPrice(name, newPrice) {
  newPrice = parseFloat(newPrice);
  if (order[name]) {
    order[name].price = newPrice;
  } else {
    order[name] = { qty: 0, price: newPrice };
  }
  saveDataToStorage();  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
}
